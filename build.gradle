plugins {
    id 'java'
}

group = 'Turbo'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    // Paper API
    compileOnly "com.destroystokyo.paper:paper-api:1.12.2-R0.1-SNAPSHOT"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Spring dependencies
    implementation 'org.springframework:spring-context:5.3.9'
    implementation 'org.springframework:spring-core:6.2.0'
    implementation 'org.springframework:spring-beans:6.2.0'
    implementation 'org.springframework:spring-orm:5.2.9.RELEASE'

    // Hibernate dependencies
    implementation 'org.hibernate:hibernate-core:5.4.22.Final'

    // MySQL Connector
    implementation 'com.mysql:mysql-connector-j:8.3.0'

    // c3p0 Connection Pool
    implementation 'com.mchange:c3p0:0.9.5.4'

    // JAXB API and implementation (for Hibernate compatibility with JDK 11+)
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
    implementation 'javax.activation:activation:1.1.1'

    // AspectJ dependencies
    implementation 'org.aspectj:aspectjrt:1.9.19'
    implementation 'org.aspectj:aspectjweaver:1.9.19'

    // Java Annotations
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Testing dependencies
    testImplementation 'junit:junit:3.8.1'
}


def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
